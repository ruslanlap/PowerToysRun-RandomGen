name: Build and Release RandomGen

on:
  workflow_dispatch:
  push:
    branches:
      # - main
      # - master
    tags:
      - 'v*'

# Permissions for GITHUB_TOKEN (principle of least privilege)
permissions:
  contents: write  # Needed for creating releases
  issues: read
  pull-requests: read

# Add restrictions for parallel runs
concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

jobs:
  build:
    runs-on: windows-latest
    strategy:
      matrix:
        platform: [x64, arm64]
        include:
          - platform: x64
            runtime: win-x64
          - platform: arm64
            runtime: win-arm64
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      
      - name: Setup .NET
        uses: actions/setup-dotnet@v4
        with:
          dotnet-version: '9.0.x'
      
      - name: Build
        run: dotnet build RandomGen/RandomGen.sln -c Release -p:Platform="${{ matrix.platform }}"
      
      - name: Get version
        id: get_version
        shell: bash
        run: |
          if [[ $GITHUB_REF == refs/tags/v* ]]; then
            echo "VERSION=${GITHUB_REF#refs/tags/v}" >> $GITHUB_OUTPUT
            echo "IS_TAG=true" >> $GITHUB_OUTPUT
          else
            echo "VERSION=$(date +'%Y.%m.%d')-$(echo $GITHUB_SHA | cut -c1-7)" >> $GITHUB_OUTPUT
            echo "IS_TAG=false" >> $GITHUB_OUTPUT
          fi
      
      - name: Publish
        run: |
          # Clean up old artifacts
          Remove-Item -Recurse -Force -ErrorAction SilentlyContinue publish
          Remove-Item -Recurse -Force -ErrorAction SilentlyContinue artifacts
          New-Item -ItemType Directory -Path "artifacts" -Force
          
          # Create plugin directory
          $publishDir = "publish/RandomGen-${{ steps.get_version.outputs.VERSION }}-${{ matrix.platform }}"
          $pluginDir = "$publishDir/Community.PowerToys.Run.Plugin.RandomGen"
          New-Item -ItemType Directory -Path $pluginDir -Force
          
          # Publish for current platform with all dependencies
          dotnet publish "RandomGen/Community.PowerToys.Run.Plugin.RandomGen/Community.PowerToys.Run.Plugin.RandomGen.csproj" `
            -c Release `
            -r ${{ matrix.runtime }} `
            --self-contained true `
            -p:PublishSingleFile=false `
            -p:Version=${{ steps.get_version.outputs.VERSION }} `
            -p:FileVersion=${{ steps.get_version.outputs.VERSION }} `
            -p:AssemblyVersion=${{ steps.get_version.outputs.VERSION }}.0 `
            -o "$pluginDir"
          
          # Ensure plugin.json is copied
          Copy-Item -Path "RandomGen/Community.PowerToys.Run.Plugin.RandomGen/plugin.json" -Destination "$pluginDir" -Force
          
          # Copy Images folder if it exists
          if (Test-Path "RandomGen/Community.PowerToys.Run.Plugin.RandomGen/Images") {
            Copy-Item -Path "RandomGen/Community.PowerToys.Run.Plugin.RandomGen/Images" -Destination "$pluginDir" -Recurse -Force
          }
          
          # Create the zip file
          $zipPath = "artifacts/RandomGen-${{ steps.get_version.outputs.VERSION }}-${{ matrix.platform }}.zip"
          Compress-Archive -Path "$publishDir/*" -DestinationPath $zipPath -Force

      - name: Upload build artifacts
        uses: actions/upload-artifact@v4
        with:
          name: build-artifacts-${{ matrix.platform }}
          path: artifacts/RandomGen-${{ steps.get_version.outputs.VERSION }}-${{ matrix.platform }}.zip
          retention-days: 5

  release:
    needs: build
    runs-on: ubuntu-latest
    if: startsWith(github.ref, 'refs/tags/v')
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      
      - name: Download all artifacts
        uses: actions/download-artifact@v4
        with:
          path: artifacts
      
      - name: Get version from tag
        id: get_version
        run: echo "VERSION=${GITHUB_REF#refs/tags/v}" >> $GITHUB_OUTPUT
      
      - name: Prepare Release Notes
        id: release_notes
        run: |
          cat > release_notes.md << 'EOL'
          # üìù RandomGen v${{ steps.get_version.outputs.VERSION }}
          
          <p align="center">
            <img src="https://github.com/ruslanlap/RandomGen/blob/master/assets/randomgen.logo.png" width="128px" alt="RandomGen Logo" />
          </p>
          
          ## ‚ú® What's New
          
          <!-- Add your release highlights here -->
          - üöÄ Performance improvements
          - üêõ Bug fixes
          - ‚ú® New features
          
          ## üì• Installation
          
          1. Download the ZIP file for your platform (x64 or ARM64)  
          2. Extract to `%LOCALAPPDATA%\Microsoft\PowerToys\PowerToys Run\Plugins\`  
          3. Restart PowerToys  
          4. Start using with `Alt+Space` then type `rd`
          
          ## üîç Quick Commands
          
          | Command                     | Description                         |
          |-----------------------------|-------------------------------------|
          | `rd password [length]`     | Generate a secure password          |
          | `rd pin [length]`          | Generate a numeric PIN              |
          | `rd email`                 | Generate a random email address     |
          | `rd guid`                  | Generate a random GUID/UUID         |
          
          ## üôè Thank You
          
          Thank you for using RandomGen! If you encounter any issues or have suggestions, please [open an issue](https://github.com/ruslanlap/RandomGen/issues).
          
          Made with ‚ù§Ô∏è by <a href="https://github.com/ruslanlap">ruslanlap</a>
          EOL
          
          RELEASE_NOTES=$(cat release_notes.md)
          echo "RELEASE_NOTES<<EOF" >> $GITHUB_OUTPUT
          echo "$RELEASE_NOTES" >> $GITHUB_OUTPUT
          echo "EOF" >> $GITHUB_OUTPUT
      
      - name: Rename Release Artifacts
        if: success()
        run: |
          mkdir -p release_assets
          cp artifacts/build-artifacts-x64/RandomGen-v${{ steps.get_version.outputs.VERSION }}-x64.zip release_assets/RandomGen-v${{ steps.get_version.outputs.VERSION }}-x64.zip
          cp artifacts/build-artifacts-arm64/RandomGen-v${{ steps.get_version.outputs.VERSION }}-arm64.zip release_assets/RandomGen-v${{ steps.get_version.outputs.VERSION }}-arm64.zip
      
      - name: Create Release
        id: create_release
        uses: softprops/action-gh-release@v2
        with:
          name: RandomGen v${{ steps.get_version.outputs.VERSION }}
          body: ${{ steps.release_notes.outputs.RELEASE_NOTES }}
          draft: false
          prerelease: false
          tag_name: v${{ steps.get_version.outputs.VERSION }}
          files: |
            release_assets/RandomGen-v${{ steps.get_version.outputs.VERSION }}-x64.zip
            release_assets/RandomGen-v${{ steps.get_version.outputs.VERSION }}-arm64.zip